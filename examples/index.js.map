{"version":3,"file":"index.js","sources":["../dist/kriging.esm.js","index.ts"],"sourcesContent":["/*!\n * author: sakitam-fdd <smilefdd@gmail.com> \n * @sakitam-gis/kriging v0.0.1\n * build-time: 2019-5-7 13:51\n * LICENSE: MIT\n * (c) 2019-2019 https://github.com/sakitam-gis/kriging.js\n */\nfunction max(source) {\r\n    return Math.max.apply(null, source);\r\n}\r\nfunction min(source) {\r\n    return Math.min.apply(null, source);\r\n}\r\nfunction rep(source, n) {\r\n    var array = [];\r\n    for (var i = 0; i < n; i++) {\r\n        array.push(source);\r\n    }\r\n    return array;\r\n}\r\nfunction pip(source, x, y) {\r\n    var i = 0;\r\n    var j = source.length - 1;\r\n    var c = false;\r\n    var length = source.length;\r\n    for (; i < length; j = i++) {\r\n        if (((source[i][1] > y) !== (source[j][1] > y))\r\n            && (x < (source[j][0] - source[i][0]) * (y - source[i][1]) / (source[j][1] - source[i][1]) + source[i][0])) {\r\n            c = !c;\r\n        }\r\n    }\r\n    return c;\r\n}\r\nfunction matrixDiag(c, n) {\r\n    var i = 0;\r\n    var Z = rep(0, n * n);\r\n    for (; i < n; i++) {\r\n        Z[i * n + i] = c;\r\n    }\r\n    return Z;\r\n}\r\nfunction matrixTranspose(X, n, m) {\r\n    var i = 0;\r\n    var j;\r\n    var Z = Array(m * n);\r\n    for (; i < n; i++) {\r\n        j = 0;\r\n        for (; j < m; j++) {\r\n            Z[j * n + i] = X[i * m + j];\r\n        }\r\n    }\r\n    return Z;\r\n}\r\nfunction matrixAdd(X, Y, n, m) {\r\n    var i = 0;\r\n    var j;\r\n    var Z = Array(n * m);\r\n    for (; i < n; i++) {\r\n        j = 0;\r\n        for (; j < m; j++) {\r\n            Z[i * m + j] = X[i * m + j] + Y[i * m + j];\r\n        }\r\n    }\r\n    return Z;\r\n}\r\nfunction matrixMultiply(X, Y, n, m, p) {\r\n    var i = 0;\r\n    var j;\r\n    var k;\r\n    var Z = Array(n * p);\r\n    for (; i < n; i++) {\r\n        j = 0;\r\n        for (; j < p; j++) {\r\n            Z[i * p + j] = 0;\r\n            k = 0;\r\n            for (; k < m; k++) {\r\n                Z[i * p + j] += X[i * m + k] * Y[k * p + j];\r\n            }\r\n        }\r\n    }\r\n    return Z;\r\n}\r\nfunction matrixChol(X, n) {\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var p = Array(n);\r\n    for (i = 0; i < n; i++)\r\n        p[i] = X[i * n + i];\r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < i; j++)\r\n            p[i] -= X[i * n + j] * X[i * n + j];\r\n        if (p[i] <= 0)\r\n            return false;\r\n        p[i] = Math.sqrt(p[i]);\r\n        for (j = i + 1; j < n; j++) {\r\n            for (k = 0; k < i; k++)\r\n                X[j * n + i] -= X[j * n + k] * X[i * n + k];\r\n            X[j * n + i] /= p[i];\r\n        }\r\n    }\r\n    for (i = 0; i < n; i++)\r\n        X[i * n + i] = p[i];\r\n    return true;\r\n}\r\nfunction matrixChol2inv(X, n) {\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var sum;\r\n    for (i = 0; i < n; i++) {\r\n        X[i * n + i] = 1 / X[i * n + i];\r\n        for (j = i + 1; j < n; j++) {\r\n            sum = 0;\r\n            for (k = i; k < j; k++)\r\n                sum -= X[j * n + k] * X[k * n + i];\r\n            X[j * n + i] = sum / X[j * n + j];\r\n        }\r\n    }\r\n    for (i = 0; i < n; i++)\r\n        for (j = i + 1; j < n; j++)\r\n            X[i * n + j] = 0;\r\n    for (i = 0; i < n; i++) {\r\n        X[i * n + i] *= X[i * n + i];\r\n        for (k = i + 1; k < n; k++)\r\n            X[i * n + i] += X[k * n + i] * X[k * n + i];\r\n        for (j = i + 1; j < n; j++)\r\n            for (k = j; k < n; k++)\r\n                X[i * n + j] += X[k * n + i] * X[k * n + j];\r\n    }\r\n    for (i = 0; i < n; i++)\r\n        for (j = 0; j < i; j++)\r\n            X[i * n + j] = X[j * n + i];\r\n}\r\nfunction matrixSolve(X, n) {\r\n    var m = n;\r\n    var b = Array(n * n);\r\n    var indxc = Array(n);\r\n    var indxr = Array(n);\r\n    var ipiv = Array(n);\r\n    var i;\r\n    var icol = 0;\r\n    var irow = 0;\r\n    var j;\r\n    var k;\r\n    var l;\r\n    var ll;\r\n    var big;\r\n    var dum;\r\n    var pivinv;\r\n    var temp;\r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n            if (i === j)\r\n                b[i * n + j] = 1;\r\n            else\r\n                b[i * n + j] = 0;\r\n        }\r\n    }\r\n    for (j = 0; j < n; j++)\r\n        ipiv[j] = 0;\r\n    for (i = 0; i < n; i++) {\r\n        big = 0;\r\n        for (j = 0; j < n; j++) {\r\n            if (ipiv[j] !== 1) {\r\n                for (k = 0; k < n; k++) {\r\n                    if (ipiv[k] === 0) {\r\n                        if (Math.abs(X[j * n + k]) >= big) {\r\n                            big = Math.abs(X[j * n + k]);\r\n                            irow = j;\r\n                            icol = k;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        ++(ipiv[icol]);\r\n        if (irow !== icol) {\r\n            for (l = 0; l < n; l++) {\r\n                temp = X[irow * n + l];\r\n                X[irow * n + l] = X[icol * n + l];\r\n                X[icol * n + l] = temp;\r\n            }\r\n            for (l = 0; l < m; l++) {\r\n                temp = b[irow * n + l];\r\n                b[irow * n + l] = b[icol * n + l];\r\n                b[icol * n + l] = temp;\r\n            }\r\n        }\r\n        indxr[i] = irow;\r\n        indxc[i] = icol;\r\n        if (X[icol * n + icol] === 0)\r\n            return false;\r\n        pivinv = 1 / X[icol * n + icol];\r\n        X[icol * n + icol] = 1;\r\n        for (l = 0; l < n; l++)\r\n            X[icol * n + l] *= pivinv;\r\n        for (l = 0; l < m; l++)\r\n            b[icol * n + l] *= pivinv;\r\n        for (ll = 0; ll < n; ll++) {\r\n            if (ll !== icol) {\r\n                dum = X[ll * n + icol];\r\n                X[ll * n + icol] = 0;\r\n                for (l = 0; l < n; l++)\r\n                    X[ll * n + l] -= X[icol * n + l] * dum;\r\n                for (l = 0; l < m; l++)\r\n                    b[ll * n + l] -= b[icol * n + l] * dum;\r\n            }\r\n        }\r\n    }\r\n    for (l = (n - 1); l >= 0; l--) {\r\n        if (indxr[l] !== indxc[l]) {\r\n            for (k = 0; k < n; k++) {\r\n                temp = X[k * n + indxr[l]];\r\n                X[k * n + indxr[l]] = X[k * n + indxc[l]];\r\n                X[k * n + indxc[l]] = temp;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction variogramGaussian(h, nugget, range, sill, A) {\r\n    return nugget + ((sill - nugget) / range)\r\n        * (1.0 - Math.exp(-(1.0 / A) * Math.pow(h / range, 2)));\r\n}\r\nfunction variogramExponential(h, nugget, range, sill, A) {\r\n    return nugget + ((sill - nugget) / range)\r\n        * (1.0 - Math.exp(-(1.0 / A) * (h / range)));\r\n}\r\nfunction variogramSpherical(h, nugget, range, sill) {\r\n    if (h > range)\r\n        return nugget + (sill - nugget) / range;\r\n    return nugget + ((sill - nugget) / range)\r\n        * (1.5 * (h / range) - 0.5 * Math.pow(h / range, 3));\r\n}\r\n//# sourceMappingURL=utils.js.map\n\nfunction train(t, x, y, model, sigma2, alpha) {\r\n    var variogram = {\r\n        t: t,\r\n        x: x,\r\n        y: y,\r\n        nugget: 0.0,\r\n        range: 0.0,\r\n        sill: 0.0,\r\n        A: 1 / 3,\r\n        n: 0,\r\n        model: variogramExponential,\r\n        K: [],\r\n        M: [],\r\n    };\r\n    switch (model) {\r\n        case 'gaussian':\r\n            variogram.model = variogramGaussian;\r\n            break;\r\n        case 'exponential':\r\n            variogram.model = variogramExponential;\r\n            break;\r\n        case 'spherical':\r\n            variogram.model = variogramSpherical;\r\n            break;\r\n        default:\r\n            variogram.model = variogramExponential;\r\n    }\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var l;\r\n    var n = t.length;\r\n    var distance = Array((n * n - n) / 2);\r\n    for (i = 0, k = 0; i < n; i++) {\r\n        for (j = 0; j < i; j++, k++) {\r\n            distance[k] = Array(2);\r\n            distance[k][0] = Math.pow(Math.pow(x[i] - x[j], 2)\r\n                + Math.pow(y[i] - y[j], 2), 0.5);\r\n            distance[k][1] = Math.abs(t[i] - t[j]);\r\n        }\r\n    }\r\n    distance.sort(function (a, b) { return a[0] - b[0]; });\r\n    variogram.range = distance[(n * n - n) / 2 - 1][0];\r\n    var lags = ((n * n - n) / 2) > 30 ? 30 : (n * n - n) / 2;\r\n    var tolerance = variogram.range / lags;\r\n    var lag = rep(0, lags);\r\n    var semi = rep(0, lags);\r\n    if (lags < 30) {\r\n        for (l = 0; l < lags; l++) {\r\n            lag[l] = distance[l][0];\r\n            semi[l] = distance[l][1];\r\n        }\r\n    }\r\n    else {\r\n        for (i = 0, j = 0, k = 0, l = 0; i < lags && j < ((n * n - n) / 2); i++, k = 0) {\r\n            while (distance[j][0] <= ((i + 1) * tolerance)) {\r\n                lag[l] += distance[j][0];\r\n                semi[l] += distance[j][1];\r\n                j++;\r\n                k++;\r\n                if (j >= ((n * n - n) / 2))\r\n                    break;\r\n            }\r\n            if (k > 0) {\r\n                lag[l] /= k;\r\n                semi[l] /= k;\r\n                l++;\r\n            }\r\n        }\r\n        if (l < 2)\r\n            return variogram;\r\n    }\r\n    n = l;\r\n    variogram.range = lag[n - 1] - lag[0];\r\n    var X = rep(1, 2 * n);\r\n    var Y = Array(n);\r\n    var A = variogram.A;\r\n    for (i = 0; i < n; i++) {\r\n        switch (model) {\r\n            case 'gaussian':\r\n                X[i * 2 + 1] = 1.0 - Math.exp(-(1.0 / A) * Math.pow(lag[i] / variogram.range, 2));\r\n                break;\r\n            case 'exponential':\r\n                X[i * 2 + 1] = 1.0 - Math.exp(-(1.0 / A) * lag[i] / variogram.range);\r\n                break;\r\n            case 'spherical':\r\n                X[i * 2 + 1] = 1.5 * (lag[i] / variogram.range)\r\n                    - 0.5 * Math.pow(lag[i] / variogram.range, 3);\r\n                break;\r\n        }\r\n        Y[i] = semi[i];\r\n    }\r\n    var Xt = matrixTranspose(X, n, 2);\r\n    var Z = matrixMultiply(Xt, X, 2, n, 2);\r\n    Z = matrixAdd(Z, matrixDiag(1 / alpha, 2), 2, 2);\r\n    var cloneZ = Z.slice(0);\r\n    if (matrixChol(Z, 2)) {\r\n        matrixChol2inv(Z, 2);\r\n    }\r\n    else {\r\n        matrixSolve(cloneZ, 2);\r\n        Z = cloneZ;\r\n    }\r\n    var W = matrixMultiply(matrixMultiply(Z, Xt, 2, 2, n), Y, 2, n, 1);\r\n    variogram.nugget = W[0];\r\n    variogram.sill = W[1] * variogram.range + variogram.nugget;\r\n    variogram.n = x.length;\r\n    n = x.length;\r\n    var K = Array(n * n);\r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < i; j++) {\r\n            K[i * n + j] = variogram.model(Math.pow(Math.pow(x[i] - x[j], 2)\r\n                + Math.pow(y[i] - y[j], 2), 0.5), variogram.nugget, variogram.range, variogram.sill, variogram.A);\r\n            K[j * n + i] = K[i * n + j];\r\n        }\r\n        K[i * n + i] = variogram.model(0, variogram.nugget, variogram.range, variogram.sill, variogram.A);\r\n    }\r\n    var C = matrixAdd(K, matrixDiag(sigma2, n), n, n);\r\n    var cloneC = C.slice(0);\r\n    if (matrixChol(C, n)) {\r\n        matrixChol2inv(C, n);\r\n    }\r\n    else {\r\n        matrixSolve(cloneC, n);\r\n        C = cloneC;\r\n    }\r\n    var K1 = C.slice(0);\r\n    var M = matrixMultiply(C, t, n, n, 1);\r\n    variogram.K = K1;\r\n    variogram.M = M;\r\n    return variogram;\r\n}\r\nfunction predict(x, y, variogram) {\r\n    var i;\r\n    var k = Array(variogram.n);\r\n    for (i = 0; i < variogram.n; i++) {\r\n        k[i] = variogram.model(Math.pow(Math.pow(x - variogram.x[i], 2)\r\n            + Math.pow(y - variogram.y[i], 2), 0.5), variogram.nugget, variogram.range, variogram.sill, variogram.A);\r\n    }\r\n    return matrixMultiply(k, variogram.M, 1, variogram.n, 1)[0];\r\n}\r\nfunction variance(x, y, variogram) {\r\n    var i;\r\n    var k = Array(variogram.n);\r\n    for (i = 0; i < variogram.n; i++) {\r\n        k[i] = variogram.model(Math.pow(Math.pow(x - variogram.x[i], 2) + Math.pow(y - variogram.y[i], 2), 0.5), variogram.nugget, variogram.range, variogram.sill, variogram.A);\r\n    }\r\n    var val = matrixMultiply(matrixMultiply(k, variogram.K, 1, variogram.n, variogram.n), k, 1, variogram.n, 1)[0];\r\n    return variogram.model(0, variogram.nugget, variogram.range, variogram.sill, variogram.A) + val;\r\n}\r\nfunction grid(polygons, variogram, width) {\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var n = polygons.length;\r\n    if (n === 0)\r\n        return;\r\n    var xlim = [polygons[0][0][0], polygons[0][0][0]];\r\n    var ylim = [polygons[0][0][1], polygons[0][0][1]];\r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < polygons[i].length; j++) {\r\n            if (polygons[i][j][0] < xlim[0])\r\n                xlim[0] = polygons[i][j][0];\r\n            if (polygons[i][j][0] > xlim[1])\r\n                xlim[1] = polygons[i][j][0];\r\n            if (polygons[i][j][1] < ylim[0])\r\n                ylim[0] = polygons[i][j][1];\r\n            if (polygons[i][j][1] > ylim[1])\r\n                ylim[1] = polygons[i][j][1];\r\n        }\r\n    }\r\n    var xtarget;\r\n    var ytarget;\r\n    var a = Array(2);\r\n    var b = Array(2);\r\n    var lxlim = Array(2);\r\n    var lylim = Array(2);\r\n    var x = Math.ceil((xlim[1] - xlim[0]) / width);\r\n    var y = Math.ceil((ylim[1] - ylim[0]) / width);\r\n    var A = Array(x + 1);\r\n    for (i = 0; i <= x; i++)\r\n        A[i] = Array(y + 1);\r\n    for (i = 0; i < n; i++) {\r\n        lxlim[0] = polygons[i][0][0];\r\n        lxlim[1] = lxlim[0];\r\n        lylim[0] = polygons[i][0][1];\r\n        lylim[1] = lylim[0];\r\n        for (j = 1; j < polygons[i].length; j++) {\r\n            if (polygons[i][j][0] < lxlim[0])\r\n                lxlim[0] = polygons[i][j][0];\r\n            if (polygons[i][j][0] > lxlim[1])\r\n                lxlim[1] = polygons[i][j][0];\r\n            if (polygons[i][j][1] < lylim[0])\r\n                lylim[0] = polygons[i][j][1];\r\n            if (polygons[i][j][1] > lylim[1])\r\n                lylim[1] = polygons[i][j][1];\r\n        }\r\n        a[0] = Math.floor(((lxlim[0] - ((lxlim[0] - xlim[0]) % width)) - xlim[0]) / width);\r\n        a[1] = Math.ceil(((lxlim[1] - ((lxlim[1] - xlim[1]) % width)) - xlim[0]) / width);\r\n        b[0] = Math.floor(((lylim[0] - ((lylim[0] - ylim[0]) % width)) - ylim[0]) / width);\r\n        b[1] = Math.ceil(((lylim[1] - ((lylim[1] - ylim[1]) % width)) - ylim[0]) / width);\r\n        for (j = a[0]; j <= a[1]; j++) {\r\n            for (k = b[0]; k <= b[1]; k++) {\r\n                xtarget = xlim[0] + j * width;\r\n                ytarget = ylim[0] + k * width;\r\n                if (pip(polygons[i], xtarget, ytarget)) {\r\n                    A[j][k] = predict(xtarget, ytarget, variogram);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        xlim: xlim,\r\n        ylim: ylim,\r\n        width: width,\r\n        data: A,\r\n        zlim: [min(variogram.t), max(variogram.t)],\r\n    };\r\n}\r\nfunction plot(canvas, grid, xlim, ylim, colors) {\r\n    var ctx = canvas.getContext('2d');\r\n    var data = grid.data, zlim = grid.zlim, width = grid.width;\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        var range = [xlim[1] - xlim[0], ylim[1] - ylim[0], zlim[1] - zlim[0]];\r\n        var i = void 0;\r\n        var j = void 0;\r\n        var x = void 0;\r\n        var y = void 0;\r\n        var z = void 0;\r\n        var n = data.length;\r\n        var m = data[0].length;\r\n        var wx = Math.ceil(width * canvas.width / (xlim[1] - xlim[0]));\r\n        var wy = Math.ceil(width * canvas.height / (ylim[1] - ylim[0]));\r\n        for (i = 0; i < n; i++) {\r\n            for (j = 0; j < m; j++) {\r\n                if (data[i][j] === undefined)\r\n                    continue;\r\n                x = canvas.width * (i * width + grid.xlim[0] - xlim[0]) / range[0];\r\n                y = canvas.height * (1 - (j * width + grid.ylim[0] - ylim[0]) / range[1]);\r\n                z = (data[i][j] - zlim[0]) / range[2];\r\n                if (z < 0.0)\r\n                    z = 0.0;\r\n                if (z > 1.0)\r\n                    z = 1.0;\r\n                ctx.fillStyle = colors[Math.floor((colors.length - 1) * z)];\r\n                ctx.fillRect(Math.round(x - wx / 2), Math.round(y - wy / 2), wx, wy);\r\n            }\r\n        }\r\n    }\r\n}\r\nvar index = {\r\n    train: train,\r\n    predict: predict,\r\n    variance: variance,\r\n    grid: grid,\r\n    plot: plot,\r\n};\n\nexport default index;\nexport { grid, plot, predict, train, variance };\n//# sourceMappingURL=kriging.esm.js.map\n","import { train, grid } from '..';\n\nfetch('csvjson.json', {\n  method: 'GET',\n})\n  .then((response) => {\n    return response.json();\n  })\n  // @ts-ignore\n  .then((res: any[]) => {\n    console.log(res);\n    const lngs = [];\n    const lats = [];\n    const values = [];\n    for (let i = 0; i < res.length; i++) {\n      const temp = res[i].temp;\n      const x = res[i].lon;\n      const y = res[i].lat;\n      if (temp !== 999999 && i < 500) {\n        const x1 = Number(x);\n        const y1 = Number(y);\n        const z1 = Number(temp);\n        if (x1 && y1 && z1 !== undefined && !isNaN(z1)) {\n          lngs.push(x1);\n          lats.push(y1);\n          values.push(z1);\n        }\n      }\n    }\n\n    console.time('train');\n    const variogram = train(values, lngs, lats, 'exponential', 0, 100);\n    console.timeEnd('train');\n    console.log(variogram);\n\n    const mathGrid = true;\n\n    if (mathGrid) {\n      const extent = [\n        63.81489, 12.770034,\n        143.53648, 56.38334,\n      ];\n      console.time('grid');\n      const vgrid = grid([\n        [\n          [extent[0], extent[1]], [extent[0], extent[3]],\n          [extent[2], extent[3]], [extent[2], extent[1]],\n        ],\n      ], variogram, 0.3986079500000001);\n      console.timeEnd('grid');\n      console.log(vgrid);\n    }\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n"],"names":[],"mappings":";;;;;;;;;;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,GAAG,CAAC,MAAM,EAAE;IACrB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IACD,SAAS,GAAG,CAAC,MAAM,EAAE;IACrB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IACD,SAAS,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;IACxB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;IACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChC,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3B,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,SAAS,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE;IAC3B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;IAClB,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC/B,IAAI,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE;IAChC,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtD,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACxH,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,SAAS;IACT,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;IACD,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACvB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;IACD,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAClC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACvB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3B,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,SAAS;IACT,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;IACD,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACvB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3B,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,SAAS;IACT,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACvC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACvB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3B,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,YAAY,CAAC,GAAG,CAAC,CAAC;IAClB,YAAY,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC/B,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;IACD,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1B,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9B,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrB,YAAY,OAAO,KAAK,CAAC;IACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,SAAS;IACT,KAAK;IACL,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,GAAG,CAAC;IACZ,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,GAAG,GAAG,CAAC,CAAC;IACpB,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,SAAS;IACT,KAAK;IACL,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,KAAK;IACL,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9B,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;IAC3B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACjB,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACjB,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,EAAE,CAAC;IACX,IAAI,IAAI,GAAG,CAAC;IACZ,IAAI,IAAI,GAAG,CAAC;IACZ,IAAI,IAAI,MAAM,CAAC;IACf,IAAI,IAAI,IAAI,CAAC;IACb,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChC,YAAY,IAAI,CAAC,KAAK,CAAC;IACvB,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC;IACA,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,SAAS;IACT,KAAK;IACL,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,GAAG,GAAG,CAAC,CAAC;IAChB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IAC/B,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,oBAAoB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACvC,wBAAwB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;IAC3D,4BAA4B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD,4BAA4B,IAAI,GAAG,CAAC,CAAC;IACrC,4BAA4B,IAAI,GAAG,CAAC,CAAC;IACrC,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE;IAC3B,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,gBAAgB,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,gBAAgB,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IACvC,aAAa;IACb,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,gBAAgB,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,gBAAgB,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IACvC,aAAa;IACb,SAAS;IACT,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACxB,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACxB,QAAQ,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IACpC,YAAY,OAAO,KAAK,CAAC;IACzB,QAAQ,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACxC,QAAQ,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9B,YAAY,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;IACtC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9B,YAAY,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;IACtC,QAAQ,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;IACnC,YAAY,IAAI,EAAE,KAAK,IAAI,EAAE;IAC7B,gBAAgB,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,gBAAgB,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACrC,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IACtC,oBAAoB,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3D,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IACtC,oBAAoB,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3D,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACnC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;IACnC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC3C,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;IACD,SAAS,iBAAiB,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE;IACtD,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK;IAC5C,WAAW,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,SAAS,oBAAoB,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE;IACzD,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK;IAC5C,WAAW,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IACD,SAAS,kBAAkB,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;IACpD,IAAI,IAAI,CAAC,GAAG,KAAK;IACjB,QAAQ,OAAO,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK,CAAC;IAChD,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK;IAC5C,WAAW,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD;;IAEA,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;IAC9C,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,MAAM,EAAE,GAAG;IACnB,QAAQ,KAAK,EAAE,GAAG;IAClB,QAAQ,IAAI,EAAE,GAAG;IACjB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC;IAChB,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,KAAK,EAAE,oBAAoB;IACnC,QAAQ,CAAC,EAAE,EAAE;IACb,QAAQ,CAAC,EAAE,EAAE;IACb,KAAK,CAAC;IACN,IAAI,QAAQ,KAAK;IACjB,QAAQ,KAAK,UAAU;IACvB,YAAY,SAAS,CAAC,KAAK,GAAG,iBAAiB,CAAC;IAChD,YAAY,MAAM;IAClB,QAAQ,KAAK,aAAa;IAC1B,YAAY,SAAS,CAAC,KAAK,GAAG,oBAAoB,CAAC;IACnD,YAAY,MAAM;IAClB,QAAQ,KAAK,WAAW;IACxB,YAAY,SAAS,CAAC,KAAK,GAAG,kBAAkB,CAAC;IACjD,YAAY,MAAM;IAClB,QAAQ;IACR,YAAY,SAAS,CAAC,KAAK,GAAG,oBAAoB,CAAC;IACnD,KAAK;IACL,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACrB,IAAI,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACnC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;IACrC,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9D,kBAAkB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACjD,YAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,SAAS;IACT,KAAK;IACL,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,IAAI,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7D,IAAI,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;IAC3C,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC3B,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5B,IAAI,IAAI,IAAI,GAAG,EAAE,EAAE;IACnB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACnC,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,SAAS;IACT,KAAK;IACL,SAAS;IACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;IACxF,YAAY,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,EAAE;IAC5D,gBAAgB,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,gBAAgB,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,CAAC,EAAE,CAAC;IACpB,gBAAgB,CAAC,EAAE,CAAC;IACpB,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,oBAAoB,MAAM;IAC1B,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE;IACvB,gBAAgB,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5B,gBAAgB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7B,gBAAgB,CAAC,EAAE,CAAC;IACpB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC;IACjB,YAAY,OAAO,SAAS,CAAC;IAC7B,KAAK;IACL,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IACxB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,QAAQ,KAAK;IACrB,YAAY,KAAK,UAAU;IAC3B,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAClG,gBAAgB,MAAM;IACtB,YAAY,KAAK,aAAa;IAC9B,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACrF,gBAAgB,MAAM;IACtB,YAAY,KAAK,WAAW;IAC5B,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;IAC/D,sBAAsB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClE,gBAAgB,MAAM;IACtB,SAAS;IACT,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,KAAK;IACL,IAAI,IAAI,EAAE,GAAG,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,IAAI,IAAI,CAAC,GAAG,cAAc,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC1B,QAAQ,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,KAAK;IACL,SAAS;IACT,QAAQ,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC/B,QAAQ,CAAC,GAAG,MAAM,CAAC;IACnB,KAAK;IACL,IAAI,IAAI,CAAC,GAAG,cAAc,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;IAC/D,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACjB,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,kBAAkB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IAClH,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,SAAS;IACT,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1G,KAAK;IACL,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC1B,QAAQ,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,KAAK;IACL,SAAS;IACT,QAAQ,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC/B,QAAQ,CAAC,GAAG,MAAM,CAAC;IACnB,KAAK;IACL,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,IAAI,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;IACrB,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IACpB,IAAI,OAAO,SAAS,CAAC;IACrB,CAAC;IACD,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE;IAClC,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACvE,cAAc,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACrH,KAAK;IACL,IAAI,OAAO,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;AACD,IASA,SAAS,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC5B,IAAI,IAAI,CAAC,KAAK,CAAC;IACf,QAAQ,OAAO;IACf,IAAI,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjD,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,SAAS;IACT,KAAK;IACL,IAAI,IAAI,OAAO,CAAC;IAChB,IAAI,IAAI,OAAO,CAAC;IAChB,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IACnD,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IACnD,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5B,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjD,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAC5C,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAC5C,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAC5C,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAC5C,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,SAAS;IACT,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IAC3F,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IAC1F,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IAC3F,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IAC1F,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACvC,YAAY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3C,gBAAgB,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC9C,gBAAgB,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC9C,gBAAgB,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;IACxD,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACnE,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO;IACX,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAClD,KAAK,CAAC;IACN,CAAC;AACD,IA0CA,uCAAuC;;IChfvC,KAAK,CAAC,cAAc,EAAE;QACpB,MAAM,EAAE,KAAK;KACd,CAAC;SACC,IAAI,CAAC,UAAC,QAAQ;QACb,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC,CAAC;SAED,IAAI,CAAC,UAAC,GAAU;QACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACzB,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACrB,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACrB,IAAI,IAAI,KAAK,MAAM,IAAI,CAAC,GAAG,GAAG,EAAE;gBAC9B,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBACxB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;oBAC9C,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACd,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACd,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACjB;aACF;SACF;QAED,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtB,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACnE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAIvB,AAAc;YACZ,IAAM,MAAM,GAAG;gBACb,QAAQ,EAAE,SAAS;gBACnB,SAAS,EAAE,QAAQ;aACpB,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,IAAM,KAAK,GAAG,IAAI,CAAC;gBACjB;oBACE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC9C,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC/C;aACF,EAAE,SAAS,EAAE,kBAAkB,CAAC,CAAC;YAClC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC,CAAC;SACD,KAAK,CAAC,UAAC,KAAK;QACX,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;;;;"}